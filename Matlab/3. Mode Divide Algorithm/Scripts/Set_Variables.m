% ------------------------------------------------------------------------------
% Set Variables
% ------------------------------------------------------------------------------

% TIME
t = struct('start', 0, 'final', 500, 'ts', 0.01, 'time', 0, 'length', 0);
t.time = t.start:t.ts:t.final-t.ts;
t.length = length(t.time);


% CONSTANTS
FOV = 40*D2R; % [rad]
V_SAT = 0.22; %[m/s]
W_SAT = 2.84; %[rad/s]
W_SEARCH = 1; %[rad/s]
CONVERGE_THRESHOLD = 2e-2;

% MODE DEFINE
NOT_APPLICABLE = 0;
FORMATION = 1;
SEARCH_LEADER = 2;
FOLLOWER_CENTER = 3;
STOP = 4;


% SUB MODE DEFINE
FOLLOW_LEADER = 1;
FOLLOW_FOLLOWER1 = 2;

% FORMATION VARIABLES
bar_error_ji = zeros(n, n);
zji = zeros(dim_xy,1);
zs_ji = zeros(dim_xy,1);
theta = 0*D2R;
Q = [cos(theta), sin(theta);
    -sin(theta), cos(theta)];

% AGENTS
Leader = struct('node', 'Leader', ...
    'mode', NOT_APPLICABLE, ...
    'submode', NOT_APPLICABLE,...
    'lost_leader', NOT_APPLICABLE, ...
    'center_leader', NOT_APPLICABLE, ...
    'center_follower1', NOT_APPLICABLE, ...
    'losvec', zeros(dim_xy,1), ...
    'losang', zeros(dim_th,1), ...
    'pos', zeros(dim_xy,1), ...
    'pos_dot', zeros(dim_xy,1), ...
    'att', zeros(dim_th,1), ...
    'att_dot', zeros(dim_th,1), ...
    'u_global', zeros(dim_xy, 1), ...
    'input_source', zeros(dim_xy, n), ...
    'v', 0, ...
    'w', 0, ...
    'v_l', 0, ...
    'w_l', 0, ...
    'v_f', 0, ...
    'w_f', 0, ...
    'is_leader_converge', NOT_APPLICABLE, ...
    'is_follower1_converge', NOT_APPLICABLE, ...
    'is_formation_converge', NOT_APPLICABLE);

Follower1 = struct('node', 'Follower 1', ...
    'mode', SEARCH_LEADER, ...
    'submode', FOLLOW_LEADER,...
    'lost_leader', true, ...
    'center_leader', false, ...
    'center_follower1', NOT_APPLICABLE, ...
    'losvec', zeros(dim_xy,1), ...
    'losang', zeros(dim_th,1), ...
    'pos', zeros(dim_xy,1), ...
    'pos_dot', zeros(dim_xy,1), ...
    'att', zeros(dim_th,1), ...
    'att_dot', zeros(dim_th,1), ...
    'u_global', zeros(dim_xy, 1), ...
    'input_source', zeros(dim_xy, n), ...
    'v', 0, ...
    'w', 0, ...
    'v_l', 0, ...
    'w_l', 0, ...
    'v_f', 0, ...
    'w_f', 0, ...
    'is_leader_converge', false, ...
    'is_follower1_converge', false, ...
    'is_formation_converge', NOT_APPLICABLE);

Follower2 = struct('node', 'Follower 2', ...
    'mode', SEARCH_LEADER, ...
    'submode', FOLLOW_FOLLOWER1,...
    'lost_leader', true, ...
    'center_leader', false, ...
    'center_follower1', false, ...
    'losvec', zeros(dim_xy,1), ...
    'losang', zeros(dim_th,1), ...
    'pos', zeros(dim_xy,1), ...
    'pos_dot', zeros(dim_xy,1), ...
    'att', zeros(dim_th,1), ...
    'att_dot', zeros(dim_th,1), ...
    'u_global', zeros(dim_xy, 1), ...
    'input_source', zeros(dim_xy, n), ...
    'v', 0, ...
    'w', 0, ...
    'v_l', 0, ...
    'w_l', 0, ...
    'v_f', 0, ...
    'w_f', 0, ...
    'is_leader_converge', false, ...
    'is_follower1_converge', false, ...
    'is_formation_converge', false);

A = [Leader, Follower1, Follower2];

% SET INITIAL POSITION AND ATTITUDE
if(strcmp(F.formation_mode,"Random"))
    p0 = r*(rand(dim_xy, n) - 0.5);
    a0 = 2*pi*(rand(dim_th, n) - 0.5);
else
    p0 = [-0.8483    0.0616    1.5680; %x
        -0.8921    0.5583   -0.5402]; % y
    a0 = [0.4324   -0.1923   -3.0668]; % heading angle
end

for k=1:n
    A(k).pos = p0(:,k);
    A(k).att = a0(k);
end

% BUFFER
buf = struct( ...
    'mode', zeros(1, t.length), ...
    'submode', zeros(1, t.length),...
    'lost_leader', zeros(1, t.length), ...
    'center_leader', zeros(1, t.length), ...
    'center_follower1', zeros(1, t.length), ...
    'losvec', zeros(dim_xy, t.length), ...
    'losang', zeros(dim_th, t.length), ...
    'pos', zeros(dim_xy, t.length), ...
    'pos_dot', zeros(dim_xy, t.length), ...
    'att', zeros(dim_th, t.length), ...
    'att_dot', zeros(dim_th, t.length), ...
    'u_global', zeros(dim_xy, t.length), ...
    'v', zeros(1,t.length), ...
    'w', zeros(1,t.length), ...
    'v_l', zeros(1,t.length), ...
    'w_l', zeros(1,t.length), ...
    'v_f', zeros(1,t.length), ...
    'w_f', zeros(1,t.length), ...
    'is_leader_converge', zeros(1,t.length), ...
    'is_follower1_converge', zeros(1,t.length), ...
    'is_formation_converge', zeros(1,t.length));

BUF = [buf, buf, buf];